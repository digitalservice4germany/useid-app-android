import com.android.build.api.dsl.ManagedVirtualDevice

plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.kapt)
    alias(libs.plugins.hilt.android)
    alias(libs.plugins.kotlinter)
    alias(libs.plugins.android.junit5)
    alias(libs.plugins.kotlin.serialization)
    alias(libs.plugins.ksp)
    alias(libs.plugins.sentry.android)
    alias(libs.plugins.aboutlibraries)
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "de.digitalService.useID"
        minSdk 28
        targetSdk 33
        versionCode 59
        versionName "1.8.0"

        testInstrumentationRunner "de.digitalService.useID.util.HiltTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'

        vectorDrawables {
            useSupportLibrary true
        }

        manifestPlaceholders = [
                sentryPublicKey: findProperty("sentryPublicKey"),
                sentryProjectId: findProperty("sentryProjectId"),
                matomoHost: findProperty("matomoHost"),
                matomoSiteId: findProperty("matomoSiteId"),
                unleashHost: findProperty("unleashHost"),
                unleashKey: findProperty("unleashKey")
        ]
    }

    testOptions {
        animationsDisabled = true
        packagingOptions {
            jniLibs {
                useLegacyPackaging true
            }
        }

        execution 'ANDROIDX_TEST_ORCHESTRATOR'

        managedDevices {
            devices {
                pixel2api28(ManagedVirtualDevice) {
                    device = "Pixel 2"
                    apiLevel = 28
                    systemImageSource = "aosp"
                }
                pixel2api29(ManagedVirtualDevice) {
                    device = "Pixel 2"
                    apiLevel = 29
                    systemImageSource = "aosp"
                }
                pixel2api30(ManagedVirtualDevice) {
                    device = "Pixel 2"
                    apiLevel = 30
                    systemImageSource = "aosp"
                }
                pixel2api31(ManagedVirtualDevice) {
                    device = "Pixel 2"
                    apiLevel = 31
                    systemImageSource = "aosp"
                }
                pixel6api28(ManagedVirtualDevice) {
                    device = "Pixel 6 Pro"
                    apiLevel = 28
                    systemImageSource = "aosp"
                }
                pixel6api29(ManagedVirtualDevice) {
                    device = "Pixel 6 Pro"
                    apiLevel = 29
                    systemImageSource = "aosp"
                }
                pixel6api30(ManagedVirtualDevice) {
                    device = "Pixel 6 Pro"
                    apiLevel = 30
                    systemImageSource = "aosp"
                }
                pixel6api31(ManagedVirtualDevice) {
                    device = "Pixel 6 Pro"
                    apiLevel = 31
                    systemImageSource = "aosp"
                }
            }

            groups {
                testDevices {
                    targetDevices.add(devices.pixel2api28)
                    targetDevices.add(devices.pixel2api29)
                    targetDevices.add(devices.pixel2api30)
                    targetDevices.add(devices.pixel2api31)

                    targetDevices.add(devices.pixel6api28)
                    targetDevices.add(devices.pixel6api29)
                    targetDevices.add(devices.pixel6api30)
                    targetDevices.add(devices.pixel6api31)
                }
            }
        }
    }

    buildTypes {
        release {
            // Leave out optimization for now as this leads to a crash on app launch

//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "nfc"
    productFlavors {
        device {
            dimension = "nfc"
        }
        preview {
            dimension = "nfc"
            applicationIdSuffix = ".Preview"
            versionNameSuffix = "-preview"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn",
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
        jniLibs {
            useLegacyPackaging = true
        }
    }
    lint {
        textReport true
    }
    namespace 'de.digitalService.useID'
}

dependencies {
    kapt(libs.hilt.compiler)
    kaptAndroidTest(libs.hilt.android.compiler)
    ksp(libs.compose.destinations.ksp)

    implementation(platform(libs.compose.bom))

    implementation(libs.androidx.core.ktx)
    implementation(libs.compose.ui)
    implementation(libs.compose.material3)
    implementation(libs.compose.material)
    implementation(libs.compose.material.icons.extended)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.androidx.navigation.compose)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.activity.compose)
    implementation(libs.androidx.hilt.navigation.compose)
    implementation(libs.androidx.core.splashscreen)
    implementation(libs.androidx.constraintlayout.compose)
    implementation(libs.compose.destinations.core)
    implementation(libs.kotlinx.serialization.json)
    implementation(libs.androidx.security.crypto.ktx)
    implementation(libs.hilt.android)
    implementation(libs.compose.markdown)
    implementation(libs.exoplayer)
    implementation(libs.ausweisapp2sdk.wrapper)
    implementation(libs.xerces)
    implementation(libs.slf4j.api)
    implementation(libs.logback.android)
    implementation(libs.bundles.sentry)
    implementation(libs.lottie.compose)
    implementation(libs.bundles.aboutlibraries)
    implementation(libs.matomo.sdk.android)
    implementation(libs.unleash)

    // CVE-2022-42003 (can probably be removed when updating unleash > 0.5.0)
    implementation(libs.jackson.databind)

    debugImplementation(libs.compose.ui.tooling)
    debugImplementation(libs.compose.ui.test.manifest)

    testImplementation(libs.kotlinx.coroutines.test)
    testImplementation(libs.bundles.mockk)
    testImplementation(libs.jodamob.junit5.kotlin)
    testImplementation(libs.junit.jupiter.api)
    testImplementation(libs.junit.jupiter.params)
    testRuntimeOnly(libs.junit.jupiter.engine)

    androidTestImplementation(libs.mockk.android)
    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.androidx.test.espresso.core)
    androidTestImplementation(libs.androidx.test.espresso.intents)
    androidTestImplementation(libs.androidx.test.runner)
    androidTestImplementation(libs.compose.ui.test.junit4)
    androidTestImplementation(libs.androidx.test.core)
    androidTestImplementation(libs.hilt.android.testing)
    androidTestUtil(libs.androidx.test.orchestrator)
}

kotlinter {
    ignoreFailures = false
    reporters = ['checkstyle', 'plain']
}

lintKotlinAndroidTest {
    exclude '**/*.kt'
}

lintKotlinTest {
    exclude '**/*.kt'
}

sentry {
    ignoredBuildTypes = ["debug"]
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
